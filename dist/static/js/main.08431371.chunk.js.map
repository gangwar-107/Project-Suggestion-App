{"version":3,"sources":["components/Layout/SignedInLinks.js","store/actions/authActions.js","components/Layout/SignedOutLinks.js","components/Layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","projectReducer","action","console","log","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.08431371.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n       <ul className=\"right\">\r\n         <li><NavLink to='/create'>New Project</NavLink></li>\r\n         <li><a onClick = {props.signOut}>Logout</a></li>\r\n         <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n         </NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n       const firebase =  getFirebase();\r\n\r\n       firebase.auth().signOut().then(() => {\r\n           dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n       })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n           return firestore.collection('users').doc(resp.user.uid).set({\r\n              firstName: newUser.firstName,\r\n              lastName: newUser.lastName,\r\n              initials: newUser.firstName[0] + newUser.lastName[0]\r\n           })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n\r\n    }\r\n}\r\n\r\n ","import React from 'react'\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n       <ul className=\"right\">\r\n         <li><NavLink to='/signup'>Signup</NavLink></li>\r\n         <li><NavLink to='/signin'>Login</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <SignedInLinks profile = {profile}/> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n              <Link to='/' className=\"brand-logo\">GangwarDash</Link>\r\n              {links}\r\n            </div>\r\n        </nav>\r\n    ) \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n// console.log(state)\r\n    return {\r\n      auth: state.firebase.auth,\r\n      profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return (\r\n        <div className=\"section\">\r\n          <div className=\"card z-depth-0\">\r\n             <div className=\"card-content\">\r\n                <span className=\"card-title\">Notifications</span>\r\n                <ul className=\"notifications\">\r\n                  {notifications && notifications.map(item => {\r\n                      return (\r\n                          <li key={item.id}>\r\n                            <span className=\"pink-text\">{item.user} </span>\r\n                            <span>{item.content}</span>\r\n                            <div className=\"grey-text note-date\">\r\n                            {moment(item.time.toDate()).fromNow()}\r\n                            </div>\r\n                          </li>\r\n                      )\r\n                  })}    \r\n                </ul>\r\n             </div>  \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n           <div className=\"card-content grey-text text-darken-3\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n              <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n   return (\r\n      <div className=\"project-list section\">\r\n       { projects && projects.map(project => {\r\n          return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n           <ProjectSummary project={project}/>\r\n          </Link>\r\n          )\r\n       })}\r\n      </div> \r\n   )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class Dashboard extends Component {\r\n    render() {\r\n      //  console.log(this.props)\r\n      const {projects, auth, notifications} = this.props\r\n      if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n             <div className=\"row\">\r\n                 <div className=\"col s12 m6\">\r\n                     <ProjectList projects={projects} />\r\n                 </div>\r\n                 <div className=\"col s12 m5 offset-m1\">\r\n                     <Notifications notifications = {notifications}/>\r\n                 </div>\r\n             </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n      projects: state.firestore.ordered.projects,  \r\n      auth: state.firebase.auth,\r\n      notifications: state.firestore.ordered.notifications \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n       {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n       {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                       <span className=\"card-title\">{project.title}</span>\r\n                       <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action gret lighten-4 grey-text\">\r\n                       <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                       <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n              <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth \r\n    }\r\n}\r\n\r\nexport default compose(\r\n     connect(mapStateToProps),\r\n     firestoreConnect([\r\n        {collection: 'projects'}\r\n     ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n       email: '',\r\n       password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n           [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} = this.props\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                 <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type = \"email\" id=\"email\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"password\">Password</label>\r\n                     <input type = \"password\" id=\"password\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                     <div className=\"red-text center\">\r\n                      {authError ? <p>{authError}</p> : null}\r\n                     </div>\r\n                 </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n       email: '',\r\n       password: '',\r\n       firstName: '',\r\n       lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n           [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n      //  console.log(this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                 <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"email\">Email</label>\r\n                     <input type = \"email\" id=\"email\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"password\">Password</label>\r\n                     <input type = \"password\" id=\"password\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"firstName\">First Name</label>\r\n                     <input type = \"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"lastName\">Last Name</label>\r\n                     <input type = \"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                     <div className=\"red-text center\">\r\n                       { authError ? <p>{authError}</p> : null}\r\n                     </div>\r\n                 </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n       title: '',\r\n       content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n           [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n       //  console.log(this.state)\r\n       this.props.createProject(this.state)\r\n       this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                 <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"title\">Title</label>\r\n                     <input type = \"text\" id=\"title\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <label htmlFor=\"content\">Project Content</label>\r\n                     <input type = \"text\" id=\"content\" onChange={this.handleChange} />\r\n                 </div>\r\n                 <div className=\"input-field\">\r\n                     <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                 </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n     auth: state.firebase.auth \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // this createProject property will\r\n        // be added to the component props\r\n       createProject: (project) => dispatch(createProject(project))  \r\n    }\r\n}\r\n\r\n// first parameter will be mapStateToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","// Through component we use dispatch inside which we \r\n// pass call an action creator... if we use do not use redux thunk\r\n// then we return an object\r\n// else we use redux thunk then we return a function\r\n// which halts dispatch and make async request\r\n// then later resume the dispatch \r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n       // async call to database \r\n       const firestore = getFirestore();\r\n       const profile = getState().firebase.profile\r\n       const authorId = getState().firebase.auth.uid\r\n       firestore.collection('projects').add({\r\n          ...project,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId: authorId,\r\n          createdAt: new Date()\r\n       }).then(() => {\r\n          dispatch({type: 'CREATE_PROJECT', project:project})\r\n       }).catch((err) => {\r\n           dispatch({type: 'CREATE_PROJECT-ERROR',err})\r\n       })\r\n      \r\n    }\r\n}  ","import React, { Component } from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/Layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n           <Route exact path='/' component = {Dashboard} />\n           <Route path='/project/:id' component = {ProjectDetails} />\n           <Route path='/signin' component = {SignIn} />\n           <Route path='/signup' component = {SignUp}/>\n           <Route path='/create' component= {CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  projects: [\r\n     {id: 1, title: 'help me find the peach', content: 'blah blah blah'},\r\n     {id: 2, title: 'help me find the apple', content: 'blah blah blah'},\r\n     {id: 3, title: 'help me find the banana', content: 'blah blah blah'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project err', action.err);\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default projectReducer","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error',action.err)\r\n            return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return { \r\n            ...state,\r\n            authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return { \r\n                ...state,\r\n                authError: null\r\n                }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import projectReducer from './projectReducer'\r\nimport authReducer from './authReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBqM6YMxd_8tVVeI3j8P8KZit103dfawbs\",\r\n    authDomain: \"project-suggestion-app.firebaseapp.com\",\r\n    databaseURL: \"https://project-suggestion-app.firebaseio.com\",\r\n    projectId: \"project-suggestion-app\",\r\n    storageBucket: \"project-suggestion-app.appspot.com\",\r\n    messagingSenderId: \"158481965215\",\r\n    appId: \"1:158481965215:web:13db4fbf37fb234f5cc2aa\",\r\n    measurementId: \"G-KM6QQPR5WM\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({timestampsInSnapshots:true})\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n// to combine multiple enhancer we will use compose\nconst store = createStore(rootReducer,\n    compose(   \n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile: true, userProfile: \"users\", attachAuthIsReady: true})\n     )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}